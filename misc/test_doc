XPath ROBULA+(XPath abs, Document d)
{
	Element e = eval(abs, d);
	List<XPath> xpList = ["//*"];
	while (true){
		XPath xp = xpList.removeFirst();
		List<XPath> temp = [];
		temp.append(transfConvertStar(xp));
		temp.append(transfAddID(xp));
		temp.append(transfAddText(xp));
		temp.appendAll(transfAddAttribute(xp));
		temp.appendAll(transfAddAttributeSet(xp));
		temp.append(transfAddPosition(xp));
		temp.append(transfAddLevel(xp));
		for (XPath x : temp){
			if (uniquelyLocate(x, e, d)) return x;
			else xpList.append(x);
		}
	}
}

List<XPath> eval(XPath abs, Document d):
	returns the element in d selected by the XPath locator abs
Boolean uniquelyLocate(XPath x, Element e, Document d):
	TRUE iff eval(x, d) contains only e

url_example == "http://newartcenter.org/classes/"
xpath_example == "/html/body/div[1]/div[1]/div[4]/div/div/main/article/div/div[3]/div/ul/li[1]/a[3]/h2"
L = 
N = 1 
xpath = ROBULA+(xpath_example, soup.html)
    e = eval(xpath_example, d)
    xplist = ["//*"]
    while True:
        xp = xplist.pop()
        temp = []
        ##### ITERATION 1 #####
        
        TRANSFCONVERTSTAR 
            N = 1
            L = 16
            L.get(N) = L.get(1).getTagName() ==> h2
            OUTPUT ==> //h2
        temp.append['//h2']  temp == ['//h2] xp == //h2 
        TRANSFADDID
            N = 1 
            L = 16 
            L.get(1).getID() ==> None
            OUTPUT ==> None
        temp.append[None]  temp == ['//h2'] xp == //h2 
        TRANSFADDTEXT 
            N = 1 
            L = 16 
            L.get(1).getText() ==> 'Ceramics at Home – June July – Monday – Julie Fox'
            OUTPUT ==> textoutput = //h2[contains(text(), 'Ceramics at Home – June July – Monday – Julie Fox')]
            temp.append[textoutput]  temp == ['//h2', textoutput, ]  xp == textoutput
        TRANSFADDATTRIBUTE 
            N = 1
            L = 16
            The nth level of xp does contain predicate, so no OUTPUT
            temp.append[None]  temp == ['//h2', textoutput, ]  xp == textoutput
        TRANSFADDATTRIBUTESET AND TRANSFADDPOSITION DON'T OUTPUT ANYTHING 
        TRANSFADDADDLEVEL 
            N = 1 
            L = 16 
            OUTPUT ==> //*/h2[contains(text(), 'Ceramics at Home – June July – Monday – Julie Fox')]

        for (XPath x : temp)
			if (uniquelyLocate(x, e, d)) return x;
			else xpList.append(x);

        ##### ITERATION 2 #####

        TRANSFCONVERTSTAR 
            N = 2
            L = 16
            L.get(N) = L.get(2).getTagName() ==> a
            OUTPUT ==> //a/h2[contains(text(), 'Ceramics at Home – June July – Monday – Julie Fox')]
            
        temp.append['//h2']  temp == ['//h2] xp == //h2 

        TRANSFADDID
            N = 2 
            L = 16 
            L.get(2).getID() ==> None
            OUTPUT ==> None
        temp.append[None]  temp == ['//h2'] xp == //h2 

        TRANSFADDTEXT 
            N = 2 
            L = 16 
            L.get(1).getText() ==> 'Ceramics at Home – June July – Monday – Julie Fox'
            OUTPUT ==> textoutput = //h2[contains(text(), 'Ceramics at Home – June July – Monday – Julie Fox')]
            temp.append[textoutput]  temp == ['//h2', textoutput, ]  xp == textoutput

        TRANSFADDATTRIBUTE 
            N = 2
            L = 16
            The nth level of xp does contain predicate, so no OUTPUT
            temp.append[None]  temp == ['//h2', textoutput, ]  xp == textoutput

        TRANSFADDATTRIBUTESET AND TRANSFADDPOSITION DON'T OUTPUT ANYTHING 

        TRANSFADDADDLEVEL 
            N = 2
            L = 16 
            OUTPUT ==> //*/h2[contains(text(), 'Ceramics at Home – June July – Monday – Julie Fox')]

# MFA XPATHS FOUND 
# title       : //a[@class="url"]/text()
# description : //div[3][@class="fusion-post-content-container"]
# date        : //span[1][@class="tribe-event-date-start"]

# UMBRELLA ARTS XPATHS FOUND 
# title       : //span[@class="field-content"]/a



            
